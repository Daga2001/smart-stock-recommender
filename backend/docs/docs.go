// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/stocks": {
            "post": {
                "description": "Retrieves stock data from external API for a specific page and stores in database. Returns the raw API response with stock items and next page token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stocks"
                ],
                "summary": "Fetch stocks by page number",
                "parameters": [
                    {
                        "description": "Request body with page number (integer, required)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched stock data from external API",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid JSON format, missing page field, or invalid page number",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error occurred",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    }
                }
            }
        },
        "/stocks/actions": {
            "get": {
                "description": "Retrieves a list of all unique action types found in the stock ratings database, sorted alphabetically. Used for populating filter dropdowns and ensuring UI reflects actual data.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stocks"
                ],
                "summary": "Get all available stock actions",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of unique actions",
                        "schema": {
                            "$ref": "#/definitions/handlers.ActionsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error occurred",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    }
                }
            }
        },
        "/stocks/bulk": {
            "post": {
                "description": "Clears existing database data, then fetches stock data from external API for a range of pages using parallel processing. Returns summary statistics of the operation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stocks"
                ],
                "summary": "Fetch stocks in bulk for page range with parallel processing",
                "parameters": [
                    {
                        "description": "Request body with start_page and end_page (integers, both required, max range 1,000,000)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BulkPageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully processed bulk stock data fetch with parallel processing",
                        "schema": {
                            "$ref": "#/definitions/models.BulkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid JSON, negative pages, start \u003e end, or range too large",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error occurred",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    }
                }
            }
        },
        "/stocks/chat": {
            "post": {
                "description": "Interactive chat with gpt-4.1-nano that can query the database for specific stock information and provide personalized analysis based on actual data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ai-analysis"
                ],
                "summary": "Chat with AI about stock market with database context",
                "parameters": [
                    {
                        "description": "Chat message from user",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated AI chat response with database context",
                        "schema": {
                            "$ref": "#/definitions/handlers.ChatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - missing message",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error or OpenAI API error",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    }
                }
            }
        },
        "/stocks/list": {
            "post": {
                "description": "Retrieves stored stock ratings with pagination support, ordered by creation date (newest first). Returns both data and pagination metadata.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stocks"
                ],
                "summary": "Get paginated stock ratings from database",
                "parameters": [
                    {
                        "description": "Request body with page_number (integer, min 1) and page_length (integer, 1-1000)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PaginationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved paginated stock ratings with metadata",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid JSON, page_number \u003c= 0, or page_length not between 1-1000",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error occurred",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    }
                }
            }
        },
        "/stocks/metrics": {
            "get": {
                "description": "Analyzes all stored stock ratings using parallel processing to provide comprehensive market insights including sentiment analysis, target price changes, rating distributions, top brokerages, most active stocks, and recent activity trends.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analytics"
                ],
                "summary": "Get comprehensive stock market analytics and metrics",
                "responses": {
                    "200": {
                        "description": "Successfully calculated comprehensive market metrics and analytics",
                        "schema": {
                            "$ref": "#/definitions/models.MetricsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error occurred",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    }
                }
            }
        },
        "/stocks/recommendations": {
            "get": {
                "description": "Analyzes all stock ratings data using configurable weighted algorithms to provide ranked investment recommendations. Considers target price changes, rating improvements, analyst sentiment, and market trends.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recommendations"
                ],
                "summary": "Get quantitative stock investment recommendations",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of recommendations to return (3, 5, 10, 15, 20)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully generated stock recommendations with scoring and analysis",
                        "schema": {
                            "$ref": "#/definitions/handlers.RecommendationsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid limit parameter",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error occurred during analysis",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    }
                }
            }
        },
        "/stocks/search": {
            "post": {
                "description": "Searches through stock ratings using a search term that matches ticker, company, brokerage, action, or ratings. Returns paginated results with metadata.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stocks"
                ],
                "summary": "Search stock ratings with pagination",
                "parameters": [
                    {
                        "description": "Search parameters with page_number (integer, min 1), page_length (integer, 1-1000), and search_term (string, required)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved filtered stock ratings with pagination metadata",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid JSON, missing search_term, page_number \u003c= 0, or page_length not between 1-1000",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error occurred",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    }
                }
            }
        },
        "/stocks/summary": {
            "get": {
                "description": "Uses gpt-4.1-nano to analyze current stock recommendations and generate a comprehensive natural language summary of market trends, top picks, and investment insights.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ai-analysis"
                ],
                "summary": "Get AI-generated market summary",
                "responses": {
                    "200": {
                        "description": "Successfully generated AI market summary",
                        "schema": {
                            "$ref": "#/definitions/handlers.SummaryResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error or OpenAI API error",
                        "schema": {
                            "$ref": "#/definitions/models.GenericErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.ActionsResponse": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "initiated by",
                        "target raised by",
                        "target lowered by",
                        "reiterated by",
                        "upgraded"
                    ]
                }
            }
        },
        "handlers.ChatRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "What are the best stocks to invest in today?"
                }
            }
        },
        "handlers.ChatResponse": {
            "type": "object",
            "properties": {
                "generated_at": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "response": {
                    "type": "string",
                    "example": "Based on current market data, I recommend focusing on stocks with strong buy ratings and recent target price increases. The biotech sector shows particular promise."
                },
                "tokens_used": {
                    "type": "integer",
                    "example": 156
                }
            }
        },
        "handlers.RecommendationsResponse": {
            "type": "object",
            "properties": {
                "generated_at": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "recommendations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.StockRecommendation"
                    }
                },
                "total_analyzed": {
                    "type": "integer",
                    "example": 1250
                }
            }
        },
        "handlers.StockRecommendation": {
            "type": "object",
            "properties": {
                "brokerage": {
                    "type": "string",
                    "example": "Goldman Sachs"
                },
                "company": {
                    "type": "string",
                    "example": "Apple Inc."
                },
                "current_rating": {
                    "type": "string",
                    "example": "Buy"
                },
                "price_change": {
                    "type": "number",
                    "example": 15.5
                },
                "rating_improvement": {
                    "type": "boolean",
                    "example": true
                },
                "reason": {
                    "type": "string",
                    "example": "Target raised by 15%, upgraded to Buy rating"
                },
                "recommendation": {
                    "type": "string",
                    "example": "Strong Buy"
                },
                "score": {
                    "type": "number",
                    "example": 8.5
                },
                "target_price": {
                    "type": "string",
                    "example": "$180.00"
                },
                "ticker": {
                    "type": "string",
                    "example": "AAPL"
                }
            }
        },
        "handlers.SummaryResponse": {
            "type": "object",
            "properties": {
                "generated_at": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "summary": {
                    "type": "string",
                    "example": "Today's market shows strong bullish sentiment with 15 stocks receiving target price increases. Apple leads recommendations with a 12% target raise to $180, while tech sector dominates with 60% of top picks."
                },
                "tokens_used": {
                    "type": "integer",
                    "example": 245
                }
            }
        },
        "models.ActiveStock": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "string",
                    "example": "Apple Inc."
                },
                "rating_count": {
                    "type": "integer",
                    "example": 25
                },
                "ticker": {
                    "type": "string",
                    "example": "AAPL"
                }
            }
        },
        "models.ApiResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.StockRatings"
                    }
                },
                "next_page": {
                    "type": "string"
                }
            }
        },
        "models.BrokerageActivity": {
            "type": "object",
            "properties": {
                "activity": {
                    "type": "integer",
                    "example": 150
                },
                "name": {
                    "type": "string",
                    "example": "Goldman Sachs"
                }
            }
        },
        "models.BulkPageRequest": {
            "type": "object",
            "required": [
                "end_page",
                "start_page"
            ],
            "properties": {
                "end_page": {
                    "type": "integer",
                    "example": 100
                },
                "start_page": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "models.BulkResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Successfully fetched and stored stock data"
                },
                "pages_fetched": {
                    "type": "string",
                    "example": "1-1000"
                },
                "stocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.StockRatings"
                    }
                },
                "total_stocks": {
                    "type": "integer",
                    "example": 7860
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid JSON format in request body"
                }
            }
        },
        "models.GenericErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Internal server error occurred"
                }
            }
        },
        "models.MarketSentiment": {
            "type": "object",
            "properties": {
                "bearish_count": {
                    "type": "integer",
                    "example": 600
                },
                "bearish_percentage": {
                    "type": "number",
                    "example": 23.8
                },
                "bullish_count": {
                    "type": "integer",
                    "example": 1400
                },
                "bullish_percentage": {
                    "type": "number",
                    "example": 55.6
                },
                "neutral_count": {
                    "type": "integer",
                    "example": 520
                },
                "neutral_percentage": {
                    "type": "number",
                    "example": 20.6
                }
            }
        },
        "models.MetricsData": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Comprehensive stock market analytics based on analyst ratings and target price changes"
                },
                "generated_at": {
                    "type": "string",
                    "example": "2025-01-15T10:30:00Z"
                },
                "market_sentiment": {
                    "$ref": "#/definitions/models.MarketSentiment"
                },
                "most_active_stocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ActiveStock"
                    }
                },
                "rating_distribution": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "recent_activity": {
                    "type": "integer",
                    "example": 125
                },
                "target_changes": {
                    "$ref": "#/definitions/models.TargetChanges"
                },
                "top_brokerages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BrokerageActivity"
                    }
                },
                "total_records": {
                    "type": "integer",
                    "example": 2520
                }
            }
        },
        "models.MetricsResponse": {
            "type": "object",
            "properties": {
                "metrics": {
                    "$ref": "#/definitions/models.MetricsData"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "models.PageRequest": {
            "type": "object",
            "required": [
                "page"
            ],
            "properties": {
                "page": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "models.PaginatedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.StockRatings"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationMeta"
                }
            }
        },
        "models.PaginationMeta": {
            "type": "object",
            "properties": {
                "has_next": {
                    "type": "boolean",
                    "example": true
                },
                "has_previous": {
                    "type": "boolean",
                    "example": false
                },
                "page_length": {
                    "type": "integer",
                    "example": 20
                },
                "page_number": {
                    "type": "integer",
                    "example": 1
                },
                "total_pages": {
                    "type": "integer",
                    "example": 126
                },
                "total_records": {
                    "type": "integer",
                    "example": 2520
                }
            }
        },
        "models.PaginationRequest": {
            "type": "object",
            "required": [
                "page_length",
                "page_number"
            ],
            "properties": {
                "page_length": {
                    "type": "integer",
                    "example": 20
                },
                "page_number": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "models.SearchRequest": {
            "type": "object",
            "required": [
                "page_length",
                "page_number",
                "search_term"
            ],
            "properties": {
                "page_length": {
                    "type": "integer",
                    "example": 20
                },
                "page_number": {
                    "type": "integer",
                    "example": 1
                },
                "search_term": {
                    "type": "string",
                    "example": "AAPL"
                }
            }
        },
        "models.StockRatings": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "example": "target raised by"
                },
                "brokerage": {
                    "type": "string",
                    "example": "Goldman Sachs"
                },
                "company": {
                    "type": "string",
                    "example": "Apple Inc."
                },
                "created_at": {
                    "type": "string",
                    "example": "2025-01-15T10:35:00Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "rating_from": {
                    "type": "string",
                    "example": "Buy"
                },
                "rating_to": {
                    "type": "string",
                    "example": "Strong Buy"
                },
                "target_from": {
                    "type": "string",
                    "example": "$150.00"
                },
                "target_to": {
                    "type": "string",
                    "example": "$180.00"
                },
                "ticker": {
                    "type": "string",
                    "example": "AAPL"
                },
                "time": {
                    "type": "string",
                    "example": "2025-01-15T10:30:00Z"
                }
            }
        },
        "models.TargetChanges": {
            "type": "object",
            "properties": {
                "lowered": {
                    "type": "integer",
                    "example": 800
                },
                "maintained": {
                    "type": "integer",
                    "example": 520
                },
                "raised": {
                    "type": "integer",
                    "example": 1200
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8081",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Smart Stock Recommender API",
	Description:      "API for fetching and managing stock ratings data",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
